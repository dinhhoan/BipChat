plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization' version "1.4.30"
}

android {

    def APP_NAME = "PipChat"

    namespace 'bitcat.lab.pipchat'
    compileSdk 33

    defaultConfig {
        applicationId "bitcat.lab.pipchat"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "pipchat"

    productFlavors {
        dev {
            dimension "pipchat"
        }

        pipchat {
            dimension "pipchat"
            applicationId "bitcat.lab.pipchat"
        }
    }

    android.variantFilter { variant ->
        def flavor = variant.flavors*.name
        def buildType = variant.buildType.name
        if (flavor.contains("dev")) {
            if (buildType == "release") {
                variant.setIgnore(true)
            }
        }
        if (flavor.contains("pipchat")) {
            if (buildType == "debug"
                    || buildType == "debug2"
                    || buildType == "debug3") {
                variant.setIgnore(true)
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->
            switch (variant.getName()) {
                case "devDebug":
                    variant.resValue("string", "file_provider", "${variant.applicationId}.fileprovider")
                    variant.resValue("string", "app_name", "[DEBUG]-${APP_NAME}")
                    variant.buildConfigField("String", "BUNDLE_ID", '"com.apps.healthtwin"')
                    variant.buildConfigField "String", "APP_NAME", "\"${APP_NAME}\""

                    variant.buildConfigField "String", "APP_NAME", "\"${APP_NAME}\""
                    variant.buildConfigField("String", "BASE_URL_FIRE_BASE", '"https://healthy-app-b06ec.firebaseapp.com"')
                    variant.buildConfigField("String", "DOMAIN_DYNAMIC_LINK", '"healthyappdev.page.link"')
                    variant.buildConfigField("String", "BASE_API_URL", '"https://api-dev.healthtwin.org/"')
                    variant.buildConfigField("String", "DEEPLINK", '"https://healthtwin.org"')
                    variant.buildConfigField("String", "PREFIX_DYNAMIC_LINK", '"https://healthyappdev.page.link"')
                    variant.buildConfigField("String", "BUNDLE_ID", '"bitcat.lab.pipchat.dev"')
                    variant.buildConfigField("String", "APPSTOREID", '"1634757692"')
                    variant.buildConfigField("String", "MINIMUMVERSION", '"1.0.1"')
                    break
                case "bipchatRelease":
                    variant.resValue("string", "file_provider", "${variant.applicationId}.fileprovider")
                    variant.resValue("string", "app_name", "${APP_NAME}")
                    variant.buildConfigField("String", "BUNDLE_ID", '"bitcat.lab.pipchat"')
                    variant.buildConfigField "String", "APP_NAME", "\"${APP_NAME}\""
                    break
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.databinding:viewbinding:7.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation "androidx.fragment:fragment-ktx:1.5.3"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    // viewModelScope
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0-alpha02"

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.42'
    kapt 'com.google.dagger:hilt-android-compiler:2.42'
    // Network with retrofit
    implementation("com.squareup.retrofit2:retrofit:2.9.0") {
        exclude module: 'okhttp'
    }
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:4.9.1"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"

    // Gson
    implementation "com.google.code.gson:gson:2.8.9"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'

    // Easy permission
    implementation 'pub.devrel:easypermissions:3.0.0'

    // Navigation
    def nav_version = "2.4.2"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'
}